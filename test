private static <S> void createSummarySheet(SXSSFWorkbook workbook, S summaryObject) throws IOException {
    SXSSFSheet summarySheet = workbook.createSheet("Summary");
    try {
        summarySheet.setRandomAccessWindowSize(10);
        CellStyle headerStyle = createHeaderStyle(workbook);
        
        // Create header
        Row headerRow = summarySheet.createRow(0);
        headerRow.createCell(0).setCellValue("Field Name");
        headerRow.createCell(1).setCellValue("Value");
        headerRow.getCell(0).setCellStyle(headerStyle);
        headerRow.getCell(1).setCellStyle(headerStyle);

        // Create date style for 24-hour timestamp
        CellStyle timestampStyle = workbook.createCellStyle();
        timestampStyle.setDataFormat(workbook.createDataFormat().getFormat("yyyy-mm-dd hh:mm"));

        // Get fields in ExcelColumn order
        List<Field> orderedFields = Arrays.stream(summaryObject.getClass().getDeclaredFields())
                .filter(f -> f.isAnnotationPresent(ExcelColumn.class))
                .sorted(Comparator.comparingInt(f -> f.getAnnotation(ExcelColumn.class).order()))
                .collect(Collectors.toList());

        // Write summary data in specified order
        int rowNum = 1;
        for (Field field : orderedFields) {
            try {
                field.setAccessible(true);
                Object value = field.get(summaryObject);
                ExcelColumn annotation = field.getAnnotation(ExcelColumn.class);
                
                Row row = summarySheet.createRow(rowNum++);
                
                // Use annotation header if specified, otherwise use field name
                String displayName = annotation.header().isEmpty() 
                    ? field.getName() 
                    : annotation.header();
                
                row.createCell(0).setCellValue(displayName);
                
                if (value != null) {
                    Cell valueCell = row.createCell(1);
                    if (value instanceof Date) {
                        valueCell.setCellValue((Date) value);
                        valueCell.setCellStyle(timestampStyle);
                    } else if (value instanceof Number) {
                        valueCell.setCellValue(((Number) value).doubleValue());
                    } else if (value instanceof Boolean) {
                        valueCell.setCellValue((Boolean) value);
                    } else {
                        valueCell.setCellValue(value.toString());
                    }
                }
            } catch (IllegalAccessException e) {
                throw new RuntimeException("Error accessing summary field", e);
            }
        }

        // Auto-size columns
        summarySheet.autoSizeColumn(0);
        summarySheet.autoSizeColumn(1);
    } finally {
        summarySheet.flushRows();
    }
}
