-- Spring Batch Metadata Tables (3-table schema)
CREATE TABLE batch_job_instance (
  job_instance_id BIGINT PRIMARY KEY,
  version BIGINT,
  job_name VARCHAR(100) NOT NULL,
  job_key VARCHAR(32) NOT NULL,
  UNIQUE(job_name, job_key)
);

CREATE TABLE batch_job_execution (
  job_execution_id BIGINT PRIMARY KEY,
  version BIGINT,
  job_instance_id BIGINT NOT NULL,
  create_time TIMESTAMP NOT NULL,
  start_time TIMESTAMP,
  end_time TIMESTAMP,
  status VARCHAR(10),
  exit_code VARCHAR(2500),
  exit_message VARCHAR(2500),
  last_updated TIMESTAMP,
  job_parameters JSONB,
  execution_context JSONB,
  FOREIGN KEY (job_instance_id) REFERENCES batch_job_instance(job_instance_id)
);

CREATE TABLE batch_step_execution (
  step_execution_id BIGINT PRIMARY KEY,
  version BIGINT NOT NULL,
  step_name VARCHAR(100) NOT NULL,
  job_execution_id BIGINT NOT NULL,
  start_time TIMESTAMP NOT NULL,
  end_time TIMESTAMP,
  status VARCHAR(10),
  commit_count BIGINT,
  read_count BIGINT,
  filter_count BIGINT,
  write_count BIGINT,
  read_skip_count BIGINT,
  write_skip_count BIGINT,
  process_skip_count BIGINT,
  rollback_count BIGINT,
  exit_code VARCHAR(2500),
  exit_message VARCHAR(2500),
  execution_context JSONB,
  FOREIGN KEY (job_execution_id) REFERENCES batch_job_execution(job_execution_id)
);

-- Application Tables
CREATE SEQUENCE report_key_sequence;

CREATE TABLE s3_summary (
    report_key BIGINT PRIMARY KEY DEFAULT nextval('report_key_sequence'),
    total_objects BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE s3_monitoring (
    id BIGSERIAL PRIMARY KEY,
    object_key VARCHAR(2048) NOT NULL,
    object_size VARCHAR(255) NOT NULL,
    report_key BIGINT NOT NULL REFERENCES s3_summary(report_key),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
