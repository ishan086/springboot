public class EmailContentDispositionFixer {

    public static String fixContentDispositionFilename(String email) {
        String[] lines = email.split("\\r?\\n");
        StringBuilder result = new StringBuilder();
        for (String line : lines) {
            if (line.toLowerCase().startsWith("content-disposition:")) {
                line = processContentDispositionLine(line);
            }
            appendLine(result, line);
        }
        return result.toString();
    }

    private static String processContentDispositionLine(String line) {
        if (!line.matches("(?i).*\\bfilename\\s*=.*")) {
            return addMissingFilename(line);
        } else {
            return fixExistingFilename(line);
        }
    }

    private static String addMissingFilename(String line) {
        if (line.trim().endsWith(";")) {
            return line + " filename=\"\"";
        } else {
            return line + "; filename=\"\"";
        }
    }

    private static String fixExistingFilename(String line) {
        // Updated regex to handle values with spaces and special characters
        return line.replaceAll(
            "(?i)(filename\\s*=\\s*)(?:\"([^\"]*)\"|'([^']*)'|([^;]*?))\\s*(;|$)", 
            "$1\"$2$3$4\"$5"
        );
    }

    private static void appendLine(StringBuilder sb, String line) {
        if (sb.length() > 0) {
            sb.append("\r\n");
        }
        sb.append(line);
    }

    public static void main(String[] args) {
        String email = "Content-Disposition: attachment\r\n"
                     + "Content-Disposition: form-data; filename=passport of anuj\r\n"
                     + "Content-Disposition: inline; filename='2024 document v1.pdf'\r\n"
                     + "Content-Disposition: attachment; filename=  unquoted with spaces.txt  \r\n"
                     + "Content-Disposition: attachment; filename=";

        String fixedEmail = fixContentDispositionFilename(email);
        System.out.println(fixedEmail);
    }
}
